version: 0.2

env:
  parameter-store:
    SSH_KEY: "id_rsa"
    SSH_PUB: "id_rsa.pub"
    AWS_ACCESS_KEY_ID: "onestore-aws-access-key"
    AWS_SECRET_ACCESS_KEY: "onestore-secret-access-key"

phases:
  install:
    commands:
      - echo git submodule settings..
      - mkdir -p ~/.ssh
      - echo "$SSH_KEY" > ~/.ssh/id_rsa
      - echo "$SSH_PUB" > ~/.ssh/id_rsa.pub
      - chmod 600 ~/.ssh/id_rsa
      - eval "$(ssh-agent -s)"
      - echo eks settings..
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - mkdir ~/.kube
  pre_build:
    commands:
      - echo $CODEBUILD_WEBHOOK_TRIGGER
      - echo $CODEBUILD_SOURCE_VERSION
      - |
        if [[ ${CODEBUILD_WEBHOOK_TRIGGER} ]]; then
          BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_TRIGGER | cut -d '/' -f 2)
        else
          BRANCH_NAME=$CODEBUILD_SOURCE_VERSION
        fi
      - echo branch $BRANCH_NAME
      - |
        if [[ ${BRANCH_NAME} == "master" ]]; then
          export PROFILE="prod"
        else
          export PROFILE="dev"
        fi
      - echo profile $PROFILE
      - |
        if [[ ${BRANCH_NAME} == "master" ]]; then
          export NAMESPACE="prod"
        else
          export NAMESPACE="dev"
        fi
      - echo namespace $NAMESPACE
      - |
        if [[ ${NAMESPACE} == "prod" ]]; then
          aws eks update-kubeconfig --region ap-northeast-2 --name onestore-prod
        else
          aws eks update-kubeconfig --region ap-northeast-2 --name onestore
        fi
      - export IMAGE_NAME=onestore-client-front:$PROFILE
      - echo image name $IMAGE_NAME
      - |
        if [[ ${BRANCH_NAME} == "master" ]] || [[ ${BRANCH_NAME} == "dev" ]] || [[ ${BRANCH_NAME} == "codebuild" ]]; then
          export IS_DEPLOYABLE=true
        else
          export IS_DEPLOYABLE=false
        fi
      - echo is deployable $IS_DEPLOYABLE
      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 676857894110.dkr.ecr.ap-northeast-2.amazonaws.com
  build:
    commands:
      - echo Build
      - yarn install && CI=false yarn build-$PROFILE-client

  post_build:
    commands:
      - echo Build completed on `date`
      - echo image name $IMAGE_NAME
      - |
        if [[ $IS_DEPLOYABLE = true ]] ; then
          docker build -t $IMAGE_NAME --no-cache .
          docker tag $IMAGE_NAME 676857894110.dkr.ecr.ap-northeast-2.amazonaws.com/$IMAGE_NAME
          docker push 676857894110.dkr.ecr.ap-northeast-2.amazonaws.com/$IMAGE_NAME
          kubectl apply -f kubernetes/client-$PROFILE -n $NAMESPACE
          kubectl rollout restart deployments/onestore-client-front -n $NAMESPACE
          kubectl rollout status deployments/onestore-client-front -n $NAMESPACE
        fi
